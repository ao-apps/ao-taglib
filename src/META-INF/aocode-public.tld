<?xml version="1.0" encoding="UTF-8"?>
<!--
aocode-public-taglib - Reusable Java taglib of general tools with minimal external dependencies.
Copyright (C) 2009  AO Industries, Inc.
    support@aoindustries.com
    7262 Bull Pen Cir
    Mobile, AL 36695

This file is part of aocode-public-taglib.

aocode-public-taglib is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

aocode-public-taglib is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with aocode-public-taglib.  If not, see <http://www.gnu.org/licenses/>.
-->
<taglib version="2.0" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_0.xsd">
  <tlib-version>1.0</tlib-version>
  <short-name>aocode-public</short-name>
  <uri>http://aoindustries.com/aocode-public-taglib</uri>
  <tag>
    <description>
      Gets a detailed report of a Throwable as generated by com.aoindustries.util.ErrorPrinter.

      The content type of this tag is text/plain.
    </description>
    <name>getStackTraces</name>
    <tag-class>com.aoindustries.taglib.GetStackTracesTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        Specifies the variable scope searched to retrieve the bean specified
        by name. If not specified, the default rules applied by PageContext.findAttribute()
        are applied.
      </description>
      <name>scope</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        Specifies the attribute name of the bean whose property is accessed to
        retrieve the value specified by property (if specified). If property is
        not specified, the value of this bean itself will be used.
      </description>
      <name>name</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        Specifies the name of the property to be accessed on the bean specified
        by name. This value may be a simple, indexed, or nested property reference
        expression. If not specified, the bean identified by name will itself be
        used.
      </description>
      <name>property</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <example />
  </tag>
  <tag>
    <description>
      The body of this tag contains preformatted text.
      If used in a (X)HTML context, will surround the
      content with pre tags.

      The content type of this tag is application/xhtml+xml+pre.
      Every character must be valid in XML, and not have any &lt;, &gt;
    </description>
    <name>pre</name>
    <tag-class>com.aoindustries.taglib.PreTag</tag-class>
    <body-content>scriptless</body-content>
    <example />
  </tag>
  <tag>
    <description>
      The body of this tag contains a script.  The script should not be encoded
      as if in HTML/XML, such as &amp;amp; instead of just a single &amp;.  The
      script may contain any characters valid in that language, including &lt;,
      &gt;, &amp;, \\u0000 (null), or any other values.

      The script will be properly encoded for the content of this tag.  Thus, you
      may have a script of arbitrary complexity containing arbitrary data within
      an XHTML onclick attribute, the tags will make sure everything is properly
      encoded.

      The content type of this tag is equal to the type set in the type attribute.
    </description>
    <name>script</name>
    <tag-class>com.aoindustries.taglib.ScriptTag</tag-class>
    <tei-class>com.aoindustries.taglib.ScriptTagTEI</tei-class>
    <body-content>scriptless</body-content>
    <attribute>
      <description>
        Specifies the type of script.  The default is "text/javascript".  This is
        also currently the only supported script language.
      </description>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <example />
  </tag>
  <tag>
    <description>
      Writes the bean contents.  If the bean is &lt;code&gt;null&lt;/code&gt; then nothing is displayed.
      The method attribute provides the name of the method that will be used to convert to String.
      If not provided, it will default to &lt;code&gt;"toString"&lt;/code&gt;.  This method
      name is first searched for a public version with a single parameter of Locale.  If the
      method exists and returns a String, that will be used, next it will search for the
      method without the Locale parameter and returns String.  It is an error if neither
      method is found.

      The content type depends on the value provided to the type attribute, and
      defaults to text/plain.  The content is checked for well-formedness based
      on its type:
          text/javascript - no validation
          text/plain - no validation
          text/url - must be valid URL-encoded characters only
          application/xhtml+xml - TODO: must be well-formed XHTML content. Currently only checks character values.
          application/xhtml+xml+pre - every character must be valid XML, and not have any &lt;, &gt;
    </description>
    <name>write</name>
    <tag-class>com.aoindustries.taglib.WriteTag</tag-class>
    <tei-class>com.aoindustries.taglib.WriteTagTEI</tei-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        Specifies the variable scope searched to retrieve the bean specified
        by name. If not specified, the default rules applied by PageContext.findAttribute()
        are applied.
      </description>
      <name>scope</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        Specifies the attribute name of the bean whose property is accessed to
        retrieve the value specified by property (if specified). If property is
        not specified, the value of this bean itself will be used.
      </description>
      <name>name</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        Specifies the name of the property to be accessed on the bean specified
        by name. This value may be a simple, indexed, or nested property reference
        expression. If not specified, the bean identified by name will itself be
        used.
      </description>
      <name>property</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        Specifies the method that will be used to convert the object to a
        String.  Will first look for the method with a Locale parameter, then
        if not found will look for the method with no parameters.
        This defaults to toString
      </description>
      <name>method</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
          Specifies the type of content contained in the bean.  Defaults to text/plain.
      </description>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <example />
  </tag>
  <tag>
    <description>
      The body of this tag contains any arbitary plain text.  In some contexts,
      such as contained in a JavaScript string, this may be binary transparent.

      In other contexts, it may result in an error when a character may not
      be encoded to the container's system.  An example would be a NULL character
      in an XML document.

      End of line conversions may also occur in some contexts.

      When contained in JavaScript, this will automatically be surrounded by
      double quotes and will be binary transparent through \uxxxx escape codes.
      The double quotes are automatically added to clearly separate data from
      code.  Please note that this auto-quoting applies to all forms of data in
      all tags, not just this text tag.

      The content type of this tag text/plain.
    </description>
    <name>text</name>
    <tag-class>com.aoindustries.taglib.TextTag</tag-class>
    <body-content>scriptless</body-content>
    <attribute>
      <description>When true, newlines are converted to &lt;br /&gt;</description>
      <name>makeBr</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
    </attribute>
    <attribute>
      <description>When true, consecutive spaces are converted to &amp;#160;</description>
      <name>makeNbsp</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
    </attribute>
    <example />
  </tag>
  <tag>
    <description>
      The body of this tag contains well-formed XHTML 1.0-compliant markup.

      The content type of this tag is application/xhtml+xml.
      TODO: must be well-formed XHTML content. Currently only checks character values.
    </description>
    <name>xhtml</name>
    <tag-class>com.aoindustries.taglib.XhtmlTag</tag-class>
    <body-content>scriptless</body-content>
    <example />
  </tag>
  <tag>
    <description>
      The body of this tag contains a Uniform Resource Identifier (URI or URL).
      The URL should be properly encoded and contain only valid characters.
      It should not be escaped for (X)HTML, meaning that parameter separators
      should be &amp; instead of &amp;amp;.  The proper escaping/encoding will
      be performed based on the context of this tag.

      It may be a relative or absolute URL.

      The URL will be passed through HttpServletResponse.encodeURL to add any
      URL-based session state.  Session state will not be added to external links.

      The content type of this tag is text/url.
      Must be valid URL-encoded characters only.
    </description>
    <name>url</name>
    <tag-class>com.aoindustries.taglib.UrlTag</tag-class>
    <body-content>scriptless</body-content>
    <example />
  </tag>
  <tag>
    <description>
      Renders an input tag.  The value may be provided in one of three ways, in
      precedence order:
      &lt;ol&gt;
        &lt;li&gt;Direct child &lt;value&gt; tag.&lt;/li&gt;
        &lt;li&gt;As the value attribute&lt;/li&gt;
        &lt;li&gt;Output of tag body, trimmed.&lt;/li&gt;
      &lt;/ol&gt;
    </description>
    <name>input</name>
    <tag-class>com.aoindustries.taglib.InputTag</tag-class>
    <tei-class>com.aoindustries.taglib.InputTagTEI</tei-class>
    <body-content>scriptless</body-content>
    <attribute>
      <description>The type of input, must be one of button, checkbox, file, hidden, image, password, radio, reset, submit, or text.</description>
      <name>type</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>The name of input tag.</description>
      <name>name</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
        The value of the input.  A nested value tag will override this value.  If neither is provided,
        the output of the body is used with whitespace trimmed.
      </description>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>A JavaScript onclick handler.  A nested onclick tag will override this value.</description>
      <name>onclick</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>The size of the input element.  A nested size tag will override this value.</description>
      <name>size</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>
    <attribute>
      <description>
          The readonly attribute.  Accepts values of "true" or "false".
          A non-empty nested readonly tag will override this value.
          If readonly is "true", will add the attribute as <code>readonly="readonly"</code>,
          otherwise the attribute is not added.
      </description>
      <name>readonly</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
    </attribute>
    <attribute>
      <description>
          The disabled attribute.  Accepts values of "true" or "false".
          A non-empty nested disabled tag will override this value.
          If disabled is "true", will add the attribute as <code>disabled="disabled"</code>,
          otherwise the attribute is not added.
      </description>
      <name>disabled</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>boolean</type>
    </attribute>
    <example />
  </tag>
  <tag>
    <description>Provides a value to its ValueAttribute parent tag.</description>
    <name>value</name>
    <tag-class>com.aoindustries.taglib.ValueTag</tag-class>
    <body-content>scriptless</body-content>
    <example />
  </tag>
  <tag>
    <description>Provides an onclick script to its OnclickAttribute parent tag.</description>
    <name>onclick</name>
    <tag-class>com.aoindustries.taglib.OnclickTag</tag-class>
    <body-content>scriptless</body-content>
    <example />
  </tag>
  <tag>
    <description>Provides a size attribute to its SizeAttribute parent tag.</description>
    <name>size</name>
    <tag-class>com.aoindustries.taglib.SizeTag</tag-class>
    <body-content>scriptless</body-content>
    <example />
  </tag>
  <tag>
    <description>
        Provides a readonly attribute to its ReadonlyAttribute parent tag.
        The body, after trimming, must contain either "true", "false", or be empty.
        If empty, the readonly attribute of the tag is not overridden.
    </description>
    <name>readonly</name>
    <tag-class>com.aoindustries.taglib.ReadonlyTag</tag-class>
    <body-content>scriptless</body-content>
    <example />
  </tag>
  <tag>
    <description>
        Provides a disabled attribute to its DisabledAttribute parent tag.
        The body, after trimming, must contain either "true", "false", or be empty.
        If empty, the disabled attribute of the tag is not overridden.
    </description>
    <name>disabled</name>
    <tag-class>com.aoindustries.taglib.DisabledTag</tag-class>
    <body-content>scriptless</body-content>
    <example />
  </tag>
</taglib>
